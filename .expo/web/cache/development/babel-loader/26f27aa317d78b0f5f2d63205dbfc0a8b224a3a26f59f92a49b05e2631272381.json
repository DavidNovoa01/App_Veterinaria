{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useMemo, useCallback } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useCalendarContext } from \"../CalendarContext\";\nimport Day from \"./Day\";\nimport { getParsedDate, getMonthDays, getWeekdaysMin, areDatesOnSameDay, getDate, getFormated } from \"../utils\";\nvar DaySelector = function DaySelector() {\n  var _getWeekdaysMin;\n  var _useCalendarContext = useCalendarContext(),\n    currentDate = _useCalendarContext.currentDate,\n    selectedDate = _useCalendarContext.selectedDate,\n    onSelectDate = _useCalendarContext.onSelectDate,\n    displayFullDays = _useCalendarContext.displayFullDays,\n    minimumDate = _useCalendarContext.minimumDate,\n    maximumDate = _useCalendarContext.maximumDate,\n    theme = _useCalendarContext.theme;\n  var _getParsedDate = getParsedDate(currentDate),\n    year = _getParsedDate.year,\n    month = _getParsedDate.month,\n    hour = _getParsedDate.hour,\n    minute = _getParsedDate.minute;\n  var daysGrid = useMemo(function () {\n    var today = new Date();\n    return getMonthDays(currentDate, displayFullDays, minimumDate, maximumDate).map(function (day) {\n      var isToday = areDatesOnSameDay(day === null || day === void 0 ? void 0 : day.date, today);\n      var selected = areDatesOnSameDay(day === null || day === void 0 ? void 0 : day.date, selectedDate);\n      return _objectSpread(_objectSpread({}, day), {}, {\n        isToday: isToday,\n        selected: selected\n      });\n    });\n  }, [month, year, displayFullDays, minimumDate, maximumDate, selectedDate]);\n  var handleSelectDate = useCallback(function (date) {\n    var newDate = getDate(date).hour(hour).minute(minute);\n    onSelectDate(getFormated(newDate));\n  }, [onSelectDate, hour, minute]);\n  return React.createElement(View, {\n    style: styles.container,\n    testID: \"day-selector\"\n  }, React.createElement(View, {\n    style: [styles.weekDaysContainer, theme === null || theme === void 0 ? void 0 : theme.weekDaysContainerStyle],\n    testID: \"week-days\"\n  }, (_getWeekdaysMin = getWeekdaysMin()) === null || _getWeekdaysMin === void 0 ? void 0 : _getWeekdaysMin.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: styles.weekDayCell\n    }, React.createElement(Text, {\n      style: theme === null || theme === void 0 ? void 0 : theme.weekDaysTextStyle\n    }, item));\n  })), React.createElement(View, {\n    style: styles.daysContainer,\n    testID: \"days\"\n  }, daysGrid === null || daysGrid === void 0 ? void 0 : daysGrid.map(function (day, index) {\n    return React.createElement(Day, {\n      key: index,\n      day: day,\n      theme: theme,\n      isToday: day.isToday,\n      selected: day.selected,\n      onSelectDate: handleSelectDate\n    });\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 5,\n    width: '100%'\n  },\n  weekDaysContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    paddingBottom: 10,\n    paddingTop: 5,\n    marginBottom: 10,\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderColor: '#E5E5E5'\n  },\n  weekDayCell: {\n    width: '14.2%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  daysContainer: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    alignContent: 'flex-start'\n  }\n});\nexport default DaySelector;","map":{"version":3,"names":["React","useMemo","useCallback","Text","View","StyleSheet","useCalendarContext","Day","getParsedDate","getMonthDays","getWeekdaysMin","areDatesOnSameDay","getDate","getFormated","DaySelector","_getWeekdaysMin","_useCalendarContext","currentDate","selectedDate","onSelectDate","displayFullDays","minimumDate","maximumDate","theme","_getParsedDate","year","month","hour","minute","daysGrid","today","Date","map","day","isToday","date","selected","_objectSpread","handleSelectDate","newDate","createElement","style","styles","container","testID","weekDaysContainer","weekDaysContainerStyle","item","index","key","weekDayCell","weekDaysTextStyle","daysContainer","create","flex","paddingTop","width","flexDirection","paddingBottom","marginBottom","alignItems","borderBottomWidth","borderColor","justifyContent","height","flexWrap","alignContent"],"sources":["C:\\Users\\Usuario\\Downloads\\Veterinaria\\node_modules\\react-native-ui-datepicker\\src\\components\\DaySelector.tsx"],"sourcesContent":["import React, { useMemo, useCallback } from 'react';\r\nimport { Text, View, StyleSheet } from 'react-native';\r\nimport { useCalendarContext } from '../CalendarContext';\r\nimport Day from './Day';\r\nimport {\r\n  getParsedDate,\r\n  getMonthDays,\r\n  getWeekdaysMin,\r\n  areDatesOnSameDay,\r\n  getDate,\r\n  getFormated,\r\n} from '../utils';\r\n\r\nconst DaySelector = () => {\r\n  const {\r\n    currentDate,\r\n    selectedDate,\r\n    onSelectDate,\r\n    displayFullDays,\r\n    minimumDate,\r\n    maximumDate,\r\n    theme,\r\n  } = useCalendarContext();\r\n  const { year, month, hour, minute } = getParsedDate(currentDate);\r\n\r\n  const daysGrid = useMemo(\r\n    () => {\r\n      const today = new Date();\r\n      return getMonthDays(\r\n        currentDate,\r\n        displayFullDays,\r\n        minimumDate,\r\n        maximumDate\r\n      ).map((day) => {\r\n        const isToday = areDatesOnSameDay(day?.date, today);\r\n        const selected = areDatesOnSameDay(day?.date, selectedDate);\r\n        return {\r\n          ...day,\r\n          isToday,\r\n          selected,\r\n        };\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [month, year, displayFullDays, minimumDate, maximumDate, selectedDate]\r\n  );\r\n\r\n  const handleSelectDate = useCallback(\r\n    (date: string) => {\r\n      const newDate = getDate(date).hour(hour).minute(minute);\r\n\r\n      onSelectDate(getFormated(newDate));\r\n    },\r\n    [onSelectDate, hour, minute]\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container} testID=\"day-selector\">\r\n      <View\r\n        style={[styles.weekDaysContainer, theme?.weekDaysContainerStyle]}\r\n        testID=\"week-days\"\r\n      >\r\n        {getWeekdaysMin()?.map((item, index) => (\r\n          <View key={index} style={styles.weekDayCell}>\r\n            <Text style={theme?.weekDaysTextStyle}>{item}</Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.daysContainer} testID=\"days\">\r\n        {daysGrid?.map((day, index) => {\r\n          return (\r\n            <Day\r\n              key={index}\r\n              day={day}\r\n              theme={theme}\r\n              isToday={day.isToday}\r\n              selected={day.selected}\r\n              onSelectDate={handleSelectDate}\r\n            />\r\n          );\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    width: '100%',\r\n  },\r\n  weekDaysContainer: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    paddingBottom: 10,\r\n    paddingTop: 5,\r\n    marginBottom: 10,\r\n    alignItems: 'center',\r\n    borderBottomWidth: 1,\r\n    borderColor: '#E5E5E5',\r\n  },\r\n  weekDayCell: {\r\n    width: '14.2%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  daysContainer: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    flexWrap: 'wrap',\r\n    flexDirection: 'row',\r\n    alignContent: 'flex-start',\r\n  },\r\n});\r\n\r\nexport default DaySelector;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}