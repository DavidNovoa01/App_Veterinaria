{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport dayjs from 'dayjs';\nexport var CALENDAR_FORMAT = 'YYYY-MM-DD HH:mm';\nexport var DATE_FORMAT = 'YYYY-MM-DD';\nexport var YEAR_PAGE_SIZE = 12;\nexport var getMonths = function getMonths() {\n  return dayjs.months();\n};\nexport var getMonthName = function getMonthName(month) {\n  return dayjs.months()[month];\n};\nexport var getWeekdays = function getWeekdays() {\n  return dayjs.weekdays();\n};\nexport var getWeekdaysShort = function getWeekdaysShort() {\n  return dayjs.weekdaysShort();\n};\nexport var getWeekdaysMin = function getWeekdaysMin() {\n  return dayjs.weekdaysMin();\n};\nexport var getFormated = function getFormated(date) {\n  return dayjs(date).format(CALENDAR_FORMAT);\n};\nexport var getDateMonth = function getDateMonth(date) {\n  return dayjs(date).month();\n};\nexport var getDateYear = function getDateYear(date) {\n  return dayjs(date).year();\n};\nexport var getToday = function getToday() {\n  return dayjs().format(DATE_FORMAT);\n};\nexport function areDatesOnSameDay(a, b) {\n  if (!a || !b) {\n    return false;\n  }\n  var date_a = dayjs(a).format(DATE_FORMAT);\n  var date_b = dayjs(b).format(DATE_FORMAT);\n  return date_a === date_b;\n}\nexport var getFormatedDate = function getFormatedDate(date, format) {\n  return dayjs(date).format(format);\n};\nexport var getDate = function getDate(date) {\n  return dayjs(date, CALENDAR_FORMAT);\n};\nexport var getYearRange = function getYearRange(year) {\n  var endYear = YEAR_PAGE_SIZE * Math.ceil(year / YEAR_PAGE_SIZE);\n  var startYear = endYear === year ? endYear : endYear - YEAR_PAGE_SIZE;\n  if (startYear < 0) startYear = 0;\n  return Array.from({\n    length: YEAR_PAGE_SIZE\n  }, function (_, i) {\n    return startYear + i;\n  });\n};\nexport var getParsedDate = function getParsedDate(date) {\n  return {\n    year: dayjs(date).year(),\n    month: dayjs(date).month(),\n    hour: dayjs(date).hour(),\n    minute: dayjs(date).minute()\n  };\n};\nexport var getMonthDays = function getMonthDays() {\n  var datetime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : dayjs();\n  var displayFullDays = arguments.length > 1 ? arguments[1] : undefined;\n  var minimumDate = arguments.length > 2 ? arguments[2] : undefined;\n  var maximumDate = arguments.length > 3 ? arguments[3] : undefined;\n  var date = getDate(datetime);\n  var daysInMonth = date.daysInMonth();\n  var prevMonthDays = date.add(-1, 'month').daysInMonth();\n  var firstDay = date.date(1);\n  var dayOfMonth = firstDay.day() % 7;\n  var prevDays = displayFullDays ? Array.from({\n    length: dayOfMonth\n  }, function (_, i) {\n    var day = i + (prevMonthDays - dayOfMonth + 1);\n    var thisDay = date.add(-1, 'month').date(day);\n    return generateDayObject(day, thisDay, minimumDate, maximumDate, false);\n  }) : Array(dayOfMonth).fill(null);\n  var monthDaysOffset = dayOfMonth + daysInMonth;\n  var nextMonthDays = displayFullDays ? monthDaysOffset > 35 ? 42 - monthDaysOffset : 35 - monthDaysOffset : 0;\n  var currentDays = Array.from({\n    length: daysInMonth\n  }, function (_, i) {\n    var day = i + 1;\n    var thisDay = date.date(day);\n    return generateDayObject(day, thisDay, minimumDate, maximumDate, true);\n  });\n  var nextDays = Array.from({\n    length: nextMonthDays\n  }, function (_, i) {\n    var day = i + 1;\n    var thisDay = date.add(1, 'month').date(day);\n    return generateDayObject(day, thisDay, minimumDate, maximumDate, false);\n  });\n  return [].concat(_toConsumableArray(prevDays), currentDays, nextDays);\n};\nvar generateDayObject = function generateDayObject(day, date, minDate, maxDate, isCurrentMonth) {\n  var disabled = false;\n  if (minDate) {\n    disabled = date < getDate(minDate);\n  }\n  if (maxDate && !disabled) {\n    disabled = date > getDate(maxDate);\n  }\n  return {\n    text: day.toString(),\n    day: day,\n    date: getFormatedDate(date, DATE_FORMAT),\n    disabled: disabled,\n    isCurrentMonth: isCurrentMonth\n  };\n};","map":{"version":3,"names":["dayjs","CALENDAR_FORMAT","DATE_FORMAT","YEAR_PAGE_SIZE","getMonths","months","getMonthName","month","getWeekdays","weekdays","getWeekdaysShort","weekdaysShort","getWeekdaysMin","weekdaysMin","getFormated","date","format","getDateMonth","getDateYear","year","getToday","areDatesOnSameDay","a","b","date_a","date_b","getFormatedDate","getDate","getYearRange","endYear","Math","ceil","startYear","Array","from","length","_","i","getParsedDate","hour","minute","getMonthDays","datetime","arguments","undefined","displayFullDays","minimumDate","maximumDate","daysInMonth","prevMonthDays","add","firstDay","dayOfMonth","day","prevDays","thisDay","generateDayObject","fill","monthDaysOffset","nextMonthDays","currentDays","nextDays","concat","_toConsumableArray","minDate","maxDate","isCurrentMonth","disabled","text","toString"],"sources":["C:\\Users\\Usuario\\Downloads\\Veterinaria\\node_modules\\react-native-ui-datepicker\\src\\utils.ts"],"sourcesContent":["import dayjs from 'dayjs';\r\nimport type { DateType, IDayObject } from './types';\r\n\r\nexport const CALENDAR_FORMAT = 'YYYY-MM-DD HH:mm';\r\nexport const DATE_FORMAT = 'YYYY-MM-DD';\r\nexport const YEAR_PAGE_SIZE = 12;\r\n\r\nexport const getMonths = () => dayjs.months();\r\n\r\nexport const getMonthName = (month: number) => dayjs.months()[month];\r\n\r\nexport const getWeekdays = () => dayjs.weekdays();\r\n\r\nexport const getWeekdaysShort = () => dayjs.weekdaysShort();\r\n\r\nexport const getWeekdaysMin = () => dayjs.weekdaysMin();\r\n\r\nexport const getFormated = (date: DateType) =>\r\n  dayjs(date).format(CALENDAR_FORMAT);\r\n\r\nexport const getDateMonth = (date: DateType) => dayjs(date).month();\r\n\r\nexport const getDateYear = (date: DateType) => dayjs(date).year();\r\n\r\nexport const getToday = () => dayjs().format(DATE_FORMAT);\r\n\r\nexport function areDatesOnSameDay(a: DateType, b: DateType) {\r\n  if (!a || !b) {\r\n    return false;\r\n  }\r\n\r\n  const date_a = dayjs(a).format(DATE_FORMAT);\r\n  const date_b = dayjs(b).format(DATE_FORMAT);\r\n\r\n  return date_a === date_b;\r\n}\r\n\r\nexport const getFormatedDate = (date: DateType, format: string) =>\r\n  dayjs(date).format(format);\r\n\r\nexport const getDate = (date: DateType) => dayjs(date, CALENDAR_FORMAT);\r\n\r\nexport const getYearRange = (year: number) => {\r\n  const endYear = YEAR_PAGE_SIZE * Math.ceil(year / YEAR_PAGE_SIZE);\r\n  let startYear = endYear === year ? endYear : endYear - YEAR_PAGE_SIZE;\r\n\r\n  if (startYear < 0) startYear = 0;\r\n  return Array.from({ length: YEAR_PAGE_SIZE }, (_, i) => startYear + i);\r\n};\r\n\r\n/**\r\n * Get detailed date object\r\n *\r\n * @param date Get detailed date object\r\n *\r\n * @returns parsed date object\r\n */\r\nexport const getParsedDate = (date: DateType) => {\r\n  return {\r\n    year: dayjs(date).year(),\r\n    month: dayjs(date).month(),\r\n    hour: dayjs(date).hour(),\r\n    minute: dayjs(date).minute(),\r\n  };\r\n};\r\n\r\n/**\r\n * Calculate month days array based on current date\r\n *\r\n * @param datetime - The current date that selected\r\n * @param displayFullDays\r\n * @param minimumDate - min selectable date\r\n * @param maximumDate - max selectable date\r\n *\r\n * @returns days array based on current date\r\n */\r\nexport const getMonthDays = (\r\n  datetime: DateType = dayjs(),\r\n  displayFullDays: boolean,\r\n  minimumDate: DateType,\r\n  maximumDate: DateType\r\n): IDayObject[] => {\r\n  const date = getDate(datetime);\r\n  const daysInMonth = date.daysInMonth();\r\n  const prevMonthDays = date.add(-1, 'month').daysInMonth();\r\n  const firstDay = date.date(1);\r\n  const dayOfMonth = firstDay.day() % 7;\r\n\r\n  const prevDays = displayFullDays\r\n    ? Array.from({ length: dayOfMonth }, (_, i) => {\r\n        const day = i + (prevMonthDays - dayOfMonth + 1);\r\n        const thisDay = date.add(-1, 'month').date(day);\r\n        return generateDayObject(day, thisDay, minimumDate, maximumDate, false);\r\n      })\r\n    : Array(dayOfMonth).fill(null);\r\n\r\n  const monthDaysOffset = dayOfMonth + daysInMonth;\r\n  const nextMonthDays = displayFullDays\r\n    ? monthDaysOffset > 35\r\n      ? 42 - monthDaysOffset\r\n      : 35 - monthDaysOffset\r\n    : 0;\r\n\r\n  const currentDays = Array.from({ length: daysInMonth }, (_, i) => {\r\n    const day = i + 1;\r\n    const thisDay = date.date(day);\r\n    return generateDayObject(day, thisDay, minimumDate, maximumDate, true);\r\n  });\r\n\r\n  const nextDays = Array.from({ length: nextMonthDays }, (_, i) => {\r\n    const day = i + 1;\r\n    const thisDay = date.add(1, 'month').date(day);\r\n    return generateDayObject(day, thisDay, minimumDate, maximumDate, false);\r\n  });\r\n\r\n  return [...prevDays, ...currentDays, ...nextDays];\r\n};\r\n\r\n/**\r\n * Generate day object for displaying inside day cell\r\n *\r\n * @param day - number of day\r\n * @param date - calculated date based on day, month, and year\r\n * @param minDate - min selectable date\r\n * @param maxDate - max selectable date\r\n * @param isCurrentMonth - define the day is in the current month\r\n *\r\n * @returns days object based on current date\r\n */\r\nconst generateDayObject = (\r\n  day: number,\r\n  date: dayjs.Dayjs,\r\n  minDate: DateType,\r\n  maxDate: DateType,\r\n  isCurrentMonth: boolean\r\n) => {\r\n  let disabled = false;\r\n  if (minDate) {\r\n    disabled = date < getDate(minDate);\r\n  }\r\n  if (maxDate && !disabled) {\r\n    disabled = date > getDate(maxDate);\r\n  }\r\n  return {\r\n    text: day.toString(),\r\n    day: day,\r\n    date: getFormatedDate(date, DATE_FORMAT),\r\n    disabled,\r\n    isCurrentMonth,\r\n  };\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,IAAMC,eAAe,GAAG,kBAAkB;AACjD,OAAO,IAAMC,WAAW,GAAG,YAAY;AACvC,OAAO,IAAMC,cAAc,GAAG,EAAE;AAEhC,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA;EAAA,OAASJ,KAAK,CAACK,MAAM,CAAC,CAAC;AAAA;AAE7C,OAAO,IAAMC,YAAY,GAAI,SAAhBA,YAAYA,CAAIC,KAAa;EAAA,OAAKP,KAAK,CAACK,MAAM,CAAC,CAAC,CAACE,KAAK,CAAC;AAAA;AAEpE,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA;EAAA,OAASR,KAAK,CAACS,QAAQ,CAAC,CAAC;AAAA;AAEjD,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA;EAAA,OAASV,KAAK,CAACW,aAAa,CAAC,CAAC;AAAA;AAE3D,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA;EAAA,OAASZ,KAAK,CAACa,WAAW,CAAC,CAAC;AAAA;AAEvD,OAAO,IAAMC,WAAW,GAAI,SAAfA,WAAWA,CAAIC,IAAc;EAAA,OACxCf,KAAK,CAACe,IAAI,CAAC,CAACC,MAAM,CAACf,eAAe,CAAC;AAAA;AAErC,OAAO,IAAMgB,YAAY,GAAI,SAAhBA,YAAYA,CAAIF,IAAc;EAAA,OAAKf,KAAK,CAACe,IAAI,CAAC,CAACR,KAAK,CAAC,CAAC;AAAA;AAEnE,OAAO,IAAMW,WAAW,GAAI,SAAfA,WAAWA,CAAIH,IAAc;EAAA,OAAKf,KAAK,CAACe,IAAI,CAAC,CAACI,IAAI,CAAC,CAAC;AAAA;AAEjE,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAASpB,KAAK,CAAC,CAAC,CAACgB,MAAM,CAACd,WAAW,CAAC;AAAA;AAEzD,OAAO,SAASmB,iBAAiBA,CAACC,CAAW,EAAEC,CAAW,EAAE;EAC1D,IAAI,CAACD,CAAC,IAAI,CAACC,CAAC,EAAE;IACZ,OAAO,KAAK;EACd;EAEA,IAAMC,MAAM,GAAGxB,KAAK,CAACsB,CAAC,CAAC,CAACN,MAAM,CAACd,WAAW,CAAC;EAC3C,IAAMuB,MAAM,GAAGzB,KAAK,CAACuB,CAAC,CAAC,CAACP,MAAM,CAACd,WAAW,CAAC;EAE3C,OAAOsB,MAAM,KAAKC,MAAM;AAC1B;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIX,IAAc,EAAEC,MAAc;EAAA,OAC5DhB,KAAK,CAACe,IAAI,CAAC,CAACC,MAAM,CAACA,MAAM,CAAC;AAAA;AAE5B,OAAO,IAAMW,OAAO,GAAI,SAAXA,OAAOA,CAAIZ,IAAc;EAAA,OAAKf,KAAK,CAACe,IAAI,EAAEd,eAAe,CAAC;AAAA;AAEvE,OAAO,IAAM2B,YAAY,GAAI,SAAhBA,YAAYA,CAAIT,IAAY,EAAK;EAC5C,IAAMU,OAAO,GAAG1B,cAAc,GAAG2B,IAAI,CAACC,IAAI,CAACZ,IAAI,GAAGhB,cAAc,CAAC;EACjE,IAAI6B,SAAS,GAAGH,OAAO,KAAKV,IAAI,GAAGU,OAAO,GAAGA,OAAO,GAAG1B,cAAc;EAErE,IAAI6B,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC;EAChC,OAAOC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEhC;EAAe,CAAC,EAAE,UAACiC,CAAC,EAAEC,CAAC;IAAA,OAAKL,SAAS,GAAGK,CAAC;EAAA,EAAC;AACxE,CAAC;AASD,OAAO,IAAMC,aAAa,GAAI,SAAjBA,aAAaA,CAAIvB,IAAc,EAAK;EAC/C,OAAO;IACLI,IAAI,EAAEnB,KAAK,CAACe,IAAI,CAAC,CAACI,IAAI,CAAC,CAAC;IACxBZ,KAAK,EAAEP,KAAK,CAACe,IAAI,CAAC,CAACR,KAAK,CAAC,CAAC;IAC1BgC,IAAI,EAAEvC,KAAK,CAACe,IAAI,CAAC,CAACwB,IAAI,CAAC,CAAC;IACxBC,MAAM,EAAExC,KAAK,CAACe,IAAI,CAAC,CAACyB,MAAM,CAAC;EAC7B,CAAC;AACH,CAAC;AAYD,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAKN;EAAA,IAJjBC,QAAkB,GAAAC,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG3C,KAAK,CAAC,CAAC;EAAA,IAC5B6C,eAAwB,GAAAF,SAAA,CAAAR,MAAA,OAAAQ,SAAA,MAAAC,SAAA;EAAA,IACxBE,WAAqB,GAAAH,SAAA,CAAAR,MAAA,OAAAQ,SAAA,MAAAC,SAAA;EAAA,IACrBG,WAAqB,GAAAJ,SAAA,CAAAR,MAAA,OAAAQ,SAAA,MAAAC,SAAA;EAErB,IAAM7B,IAAI,GAAGY,OAAO,CAACe,QAAQ,CAAC;EAC9B,IAAMM,WAAW,GAAGjC,IAAI,CAACiC,WAAW,CAAC,CAAC;EACtC,IAAMC,aAAa,GAAGlC,IAAI,CAACmC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAACF,WAAW,CAAC,CAAC;EACzD,IAAMG,QAAQ,GAAGpC,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;EAC7B,IAAMqC,UAAU,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC,GAAG,CAAC;EAErC,IAAMC,QAAQ,GAAGT,eAAe,GAC5BZ,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEiB;EAAW,CAAC,EAAE,UAAChB,CAAC,EAAEC,CAAC,EAAK;IAC3C,IAAMgB,GAAG,GAAGhB,CAAC,IAAIY,aAAa,GAAGG,UAAU,GAAG,CAAC,CAAC;IAChD,IAAMG,OAAO,GAAGxC,IAAI,CAACmC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAACnC,IAAI,CAACsC,GAAG,CAAC;IAC/C,OAAOG,iBAAiB,CAACH,GAAG,EAAEE,OAAO,EAAET,WAAW,EAAEC,WAAW,EAAE,KAAK,CAAC;EACzE,CAAC,CAAC,GACFd,KAAK,CAACmB,UAAU,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC;EAEhC,IAAMC,eAAe,GAAGN,UAAU,GAAGJ,WAAW;EAChD,IAAMW,aAAa,GAAGd,eAAe,GACjCa,eAAe,GAAG,EAAE,GAClB,EAAE,GAAGA,eAAe,GACpB,EAAE,GAAGA,eAAe,GACtB,CAAC;EAEL,IAAME,WAAW,GAAG3B,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEa;EAAY,CAAC,EAAE,UAACZ,CAAC,EAAEC,CAAC,EAAK;IAChE,IAAMgB,GAAG,GAAGhB,CAAC,GAAG,CAAC;IACjB,IAAMkB,OAAO,GAAGxC,IAAI,CAACA,IAAI,CAACsC,GAAG,CAAC;IAC9B,OAAOG,iBAAiB,CAACH,GAAG,EAAEE,OAAO,EAAET,WAAW,EAAEC,WAAW,EAAE,IAAI,CAAC;EACxE,CAAC,CAAC;EAEF,IAAMc,QAAQ,GAAG5B,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEwB;EAAc,CAAC,EAAE,UAACvB,CAAC,EAAEC,CAAC,EAAK;IAC/D,IAAMgB,GAAG,GAAGhB,CAAC,GAAG,CAAC;IACjB,IAAMkB,OAAO,GAAGxC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAACnC,IAAI,CAACsC,GAAG,CAAC;IAC9C,OAAOG,iBAAiB,CAACH,GAAG,EAAEE,OAAO,EAAET,WAAW,EAAEC,WAAW,EAAE,KAAK,CAAC;EACzE,CAAC,CAAC;EAEF,UAAAe,MAAA,CAAAC,kBAAA,CAAWT,QAAQ,GAAKM,WAAW,EAAKC,QAAQ;AAClD,CAAC;AAaD,IAAML,iBAAiB,GAAG,SAApBA,iBAAiBA,CACrBH,GAAW,EACXtC,IAAiB,EACjBiD,OAAiB,EACjBC,OAAiB,EACjBC,cAAuB,EACpB;EACH,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIH,OAAO,EAAE;IACXG,QAAQ,GAAGpD,IAAI,GAAGY,OAAO,CAACqC,OAAO,CAAC;EACpC;EACA,IAAIC,OAAO,IAAI,CAACE,QAAQ,EAAE;IACxBA,QAAQ,GAAGpD,IAAI,GAAGY,OAAO,CAACsC,OAAO,CAAC;EACpC;EACA,OAAO;IACLG,IAAI,EAAEf,GAAG,CAACgB,QAAQ,CAAC,CAAC;IACpBhB,GAAG,EAAEA,GAAG;IACRtC,IAAI,EAAEW,eAAe,CAACX,IAAI,EAAEb,WAAW,CAAC;IACxCiE,QAAQ,EAARA,QAAQ;IACRD,cAAA,EAAAA;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}