{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this;\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport DateTimePicker from \"react-native-ui-datepicker\";\nimport { Form, Item, Input, Label, Toast } from \"react-native-form-component\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Formulario = function Formulario(_ref) {\n  var modalVisible = _ref.modalVisible,\n    setModalVisible = _ref.setModalVisible;\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    fecha = _useState2[0],\n    setFecha = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    paciente = _useState4[0],\n    setPaciente = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    nombrePropietario = _useState6[0],\n    setPropietario = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    email = _useState8[0],\n    setEmail = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    telefono = _useState10[0],\n    setTelefono = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sintomas = _useState12[0],\n    setSintomas = _useState12[1];\n  var handleAgregarPaciente = function handleAgregarPaciente() {\n    if (_this.form.isValid()) {\n      console.log(\"Agregando paciente:\", {\n        paciente: paciente,\n        nombrePropietario: nombrePropietario,\n        email: email,\n        telefono: telefono,\n        fecha: fecha,\n        sintomas: sintomas\n      });\n      setModalVisible(false);\n    } else {\n      Toast.show({\n        text: \"Por favor, complete todos los campos correctamente\",\n        buttonText: \"Cerrar\",\n        duration: 3000\n      });\n    }\n  };\n  return _jsx(Modal, {\n    animationType: \"slide\",\n    visible: modalVisible,\n    children: _jsx(View, {\n      style: styles.contenido,\n      children: _jsxs(ScrollView, {\n        children: [_jsxs(Text, {\n          style: styles.titulo,\n          children: [\"Nueva\", \" \", _jsx(Text, {\n            style: styles.tituloBold,\n            children: \"Cita\"\n          })]\n        }), _jsx(Pressable, {\n          style: styles.btnCancelar,\n          onPress: function onPress() {\n            return setModalVisible(!modalVisible);\n          },\n          children: _jsx(Text, {\n            style: styles.btnCancelarTexto,\n            children: \"Cancelar\"\n          })\n        }), _jsxs(Form, {\n          ref: function ref(_ref2) {\n            return _this.form = _ref2;\n          },\n          children: [_jsxs(Item, {\n            floatingLabel: true,\n            children: [_jsx(Label, {\n              children: \"Nombre del paciente\"\n            }), _jsx(Input, {\n              value: paciente,\n              onChangeText: function onChangeText(value) {\n                return setPaciente(value);\n              }\n            })]\n          }), _jsx(Pressable, {\n            style: styles.btnNuevaCita,\n            onPress: handleAgregarPaciente,\n            children: _jsx(Text, {\n              style: styles.btnNuevaCitaTexto,\n              children: \"Agregar paciente\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  errorText: {\n    color: \"red\",\n    fontSize: 12\n  },\n  contenido: {\n    backgroundColor: \"#6D28D9\",\n    flex: 1\n  },\n  titulo: {\n    fontSize: 30,\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    marginTop: 30,\n    color: \"#fff\"\n  },\n  tituloBold: {\n    fontWeight: \"900\"\n  },\n  campo: {\n    marginTop: 10,\n    marginHorizontal: 30\n  },\n  label: {\n    color: \"#FFF\",\n    marginBottom: 10,\n    marginTop: 15,\n    fontSize: 20,\n    fontWeight: \"600\"\n  },\n  input: {\n    backgroundColor: \"#FFF\",\n    padding: 15,\n    borderRadius: 10\n  },\n  FechaContenedor: {\n    backgroundColor: \"#FFF\",\n    borderRadius: 10\n  },\n  SintomasInput: {\n    height: 100\n  },\n  btnCancelar: {\n    marginVertical: 30,\n    backgroundColor: \"#5827A4\",\n    marginHorizontal: 30,\n    padding: 15,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#FFF\"\n  },\n  btnCancelarTexto: {\n    color: \"#FFF\",\n    textAlign: \"center\",\n    fontWeight: \"900\",\n    fontSize: 16,\n    textTransform: \"uppercase\"\n  },\n  btnNuevaCita: {\n    marginVertical: 50,\n    backgroundColor: \"#F59E0B\",\n    paddingVertical: 10,\n    paddingHorizontal: 30,\n    borderRadius: 10\n  },\n  btnNuevaCitaTexto: {\n    textAlign: \"center\",\n    color: \"#5827A4\",\n    textTransform: \"uppercase\",\n    fontWeight: \"900\",\n    fontSize: 16\n  }\n});\nexport default Formulario;","map":{"version":3,"names":["React","useState","Modal","Text","StyleSheet","View","TextInput","ScrollView","Pressable","DateTimePicker","Form","Item","Input","Label","Toast","jsx","_jsx","jsxs","_jsxs","Formulario","_ref","modalVisible","setModalVisible","_useState","Date","_useState2","_slicedToArray","fecha","setFecha","_useState3","_useState4","paciente","setPaciente","_useState5","_useState6","nombrePropietario","setPropietario","_useState7","_useState8","email","setEmail","_useState9","_useState10","telefono","setTelefono","_useState11","_useState12","sintomas","setSintomas","handleAgregarPaciente","_this","form","isValid","console","log","show","text","buttonText","duration","animationType","visible","children","style","styles","contenido","titulo","tituloBold","btnCancelar","onPress","btnCancelarTexto","ref","floatingLabel","value","onChangeText","btnNuevaCita","btnNuevaCitaTexto","create","errorText","color","fontSize","backgroundColor","flex","fontWeight","textAlign","marginTop","campo","marginHorizontal","label","marginBottom","input","padding","borderRadius","FechaContenedor","SintomasInput","height","marginVertical","borderWidth","borderColor","textTransform","paddingVertical","paddingHorizontal"],"sources":["C:/Users/Usuario/Downloads/Veterinaria/Veterinaria_01/components/Formulario.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Modal,\n  Text,\n  StyleSheet,\n  View,\n  TextInput,\n  ScrollView,\n  Pressable,\n} from \"react-native\";\nimport DateTimePicker from \"react-native-ui-datepicker\";\nimport { Form, Item, Input, Label, Toast } from \"react-native-form-component\";\n\nconst Formulario = ({ modalVisible, setModalVisible }) => {\n  const [fecha, setFecha] = useState(new Date());\n  const [paciente, setPaciente] = useState(\"\");\n  const [nombrePropietario, setPropietario] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [telefono, setTelefono] = useState(\"\");\n  const [sintomas, setSintomas] = useState(\"\");\n\n  const handleAgregarPaciente = () => {\n    // Validar el formulario utilizando react-native-form-component\n    if (this.form.isValid()) {\n      // Aquí puedes realizar la lógica para agregar el paciente\n      // Actualmente, esta función no hace nada\n      console.log(\"Agregando paciente:\", {\n        paciente,\n        nombrePropietario,\n        email,\n        telefono,\n        fecha,\n        sintomas,\n      });\n\n      // Cerrar el modal después de agregar el paciente\n      setModalVisible(false);\n    } else {\n      // Mostrar mensajes de error utilizando Toast de react-native-form-component\n      Toast.show({\n        text: \"Por favor, complete todos los campos correctamente\",\n        buttonText: \"Cerrar\",\n        duration: 3000,\n      });\n    }\n  };\n\n  return (\n    <Modal animationType=\"slide\" visible={modalVisible}>\n      <View style={styles.contenido}>\n        <ScrollView>\n          <Text style={styles.titulo}>\n            Nueva{\" \"}\n            <Text style={styles.tituloBold}>Cita</Text>\n          </Text>\n\n          <Pressable\n            style={styles.btnCancelar}\n            onPress={() => setModalVisible(!modalVisible)}\n          >\n            <Text style={styles.btnCancelarTexto}>Cancelar</Text>\n          </Pressable>\n\n          <Form ref={(ref) => (this.form = ref)}>\n            <Item floatingLabel>\n              <Label>Nombre del paciente</Label>\n              <Input\n                value={paciente}\n                onChangeText={(value) => setPaciente(value)}\n              />\n            </Item>\n            {/* Repite el bloque Item, Label, Input para otros campos del formulario */}\n\n            <Pressable style={styles.btnNuevaCita} onPress={handleAgregarPaciente}>\n              <Text style={styles.btnNuevaCitaTexto}>Agregar paciente</Text>\n            </Pressable>\n          </Form>\n        </ScrollView>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  // ... (resto del código sigue igual)\n\n  errorText: {\n    color: \"red\",\n    fontSize: 12,\n  },\n  contenido: {\n    backgroundColor: \"#6D28D9\",\n    flex: 1,\n  },\n  titulo: {\n    fontSize: 30,\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    marginTop: 30,\n    color: \"#fff\",\n  },\n  tituloBold: {\n    fontWeight: \"900\",\n  },\n  campo: {\n    marginTop: 10,\n    marginHorizontal: 30,\n  },\n  label: {\n    color: \"#FFF\",\n    marginBottom: 10,\n    marginTop: 15,\n    fontSize: 20,\n    fontWeight: \"600\",\n  },\n  input: {\n    backgroundColor: \"#FFF\",\n    padding: 15,\n    borderRadius: 10,\n  },\n  FechaContenedor: {\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n  },\n  SintomasInput: {\n    height: 100,\n  },\n  btnCancelar: {\n    marginVertical: 30,\n    backgroundColor: \"#5827A4\",\n    marginHorizontal: 30,\n    padding: 15,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#FFF\",\n  },\n  btnCancelarTexto: {\n    color: \"#FFF\",\n    textAlign: \"center\",\n    fontWeight: \"900\",\n    fontSize: 16,\n    textTransform: \"uppercase\",\n  },\n  btnNuevaCita: {\n    marginVertical: 50,\n    backgroundColor: \"#F59E0B\",\n    paddingVertical: 10,\n    paddingHorizontal: 30,\n    borderRadius: 10,\n  },\n  btnNuevaCitaTexto: {\n    textAlign: \"center\",\n    color: \"#5827A4\",\n    textTransform: \"uppercase\",\n    fontWeight: \"900\",\n    fontSize: 16,\n  },\n});\n\nexport default Formulario;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}